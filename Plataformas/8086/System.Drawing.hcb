Imports System

Structure VideoMode
    Dim Width as UInt16
    Dim Height as UInt16
    Dim Colors as UInt16
    Dim DrawPixel as Action(Of VideoMode, UInt16, UInt16, UInt16)
    Dim DrawRectangle as Action(Of VideoMode, UInt16, UInt16, UInt16, UInt16, UInt16, UInt16)
    Dim DrawEllipse as Action(Of VideoMode, UInt16, UInt16, UInt16, UInt16, UInt16, UInt16)
    Dim DrawLine as Action(Of VideoMode, UInt16, UInt16, UInt16, UInt16, UInt16)
    Dim ClearScreen as Action(Of VideoMode, UInt16)
End

Module Graphics
    Dim Active as UInt16
    Dim Video as VideoMode

    Public Sub DrawPixel(x as UInt16, y as UInt16, color as UInt16)
        If Active == 0 Then Throw AccessDeniedError
        Video.DrawPixel.Invoke x, y, color
    End

    Public Sub DrawLine(x1 as UInt16, y1 as UInt16, x2 as UInt16, y2 as UInt16, color as UInt16)
        If Active == 0 Then Throw AccessDeniedError
        Video.DrawLine.Invoke x1, y1, x2, y2, color
    End

    Public Sub DrawRectangle(x1 as UInt16, y1 as UInt16, x2 as UInt16, y2 as UInt16, borderColor as UInt16, backgroundColor as UInt16)
        If Active == 0 Then Throw AccessDeniedError
        Video.DrawRectangle.Invoke x1, y1, x2, y2, borderColor, backgroundColor
    End

    Public Sub DrawEllipse(x1 as UInt16, y1 as UInt16, x2 as UInt16, y2 as UInt16, borderColor as UInt16, backgroundColor as UInt16)
        If Active == 0 Then Throw AccessDeniedError
        Video.DrawEllipse.Invoke x1, y1, x2, y2, borderColor, backgroundColor
    End

    Public Sub ClearScreen(color as UInt16)
        If Active == 0 Then Throw AccessDeniedError
        Video.ClearScreen.Invoke color
    End

    Public Function GetWidth() as UInt16
        If Active == 0 Then Throw AccessDeniedError
        Return Video.Width
    End

    Public Function GetHeight() as UInt16
        If Active == 0 Then Throw AccessDeniedError
        Return Video.Height
    End

    Public Function GetColors() as UInt16
        If Active == 0 Then Throw AccessDeniedError
        Return Video.Colors
    End

    Public Sub Mode80x25x16
        Active = 0
        asm "mov ax, 3"
        asm "int 0x10"
    End

    Public Sub ModeManual(newMode as VideoMode)
        Active = 1
        #Video = #newMode
        @Video = @newMode
    End

End

Module CGA
    Dim Video as VideoMode

    Public Sub Mode640x200x2
        asm "mov ax, 0x6"
        asm "int 0x10"
        Video.Width = 640
        Video.Height = 200
        Video.Colors = 2
        Video.DrawPixel = AddressOf(DrawPixel)
        Video.DrawLine = AddressOf(DrawLine)
        Video.DrawEllipse = AddressOf(DrawEllipse)
        Video.DrawRectangle = AddressOf(DrawRectangle)
        Video.ClearScreen = AddressOf(ClearScreen)
        Graphics.ModeManual Video
    End

    Sub DrawPixel(mode as VideoMode, x as UInt16, y as UInt16, color as UInt16)
        asm "mov ax, 0xba00"
        asm "test word [bp+12], 1"
        asm "jne .par"
        asm "mov ax, 0xb800"
        asm ".par:"
        asm "mov es, ax"
        asm "mov ax, [bp+12]"
        asm "shr ax, 1"
        asm "mov bx, 80"
        asm "mul bx"
        asm "mov bx, [bp+10]"
        asm "shr bx, 1"
        asm "shr bx, 1"
        asm "shr bx, 1"
        asm "add ax, bx"
        asm "mov di, ax"
        asm "mov cx, [bp+10]"
        asm "and cx, 7"
        asm "mov ax, [bp+14]"
        asm "and ax, 1"
        asm "je .inverte"
        asm "ror al, cl"
        asm "es or [di], al"
        asm "jmp .fim"
        asm ".inverte:"
        asm "ror al, cl"
        asm "not ax"
        asm "es and [di], al"
        asm ".fim:"
    End

    Sub DrawLine(mode as VideoMode, x1 as UInt16, y1 as UInt16, x2 as UInt16, y2 as UInt16, color as UInt16)
        Throw NotImplementedError
    End

    Sub DrawEllipse(mode as VideoMode, x1 as UInt16, y1 as UInt16, x2 as UInt16, y2 as UInt16, borderColor as UInt16, backgroundColor as UInt16)
        Throw NotImplementedError
    End

    Sub DrawRectangle(mode as VideoMode, x1 as UInt16, y1 as UInt16, x2 as UInt16, y2 as UInt16, borderColor as UInt16, backgroundColor as UInt16)
        Throw NotImplementedError
    End

    Sub ClearScreen(mode as VideoMode, color as UInt16)
        Throw NotImplementedError
    End
End