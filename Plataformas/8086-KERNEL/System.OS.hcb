module OS
    public sub Start
        ' Inicializa o compilador
        asm "cpu 8086"
        asm "bits 16"
        asm "org 0x100"
        Start2
    end

    sub Start2
        ' Declara ponteiro para os argumentos
        dim args as ptrbytearray
        ' Realoca executavel
        Dim realoc as PtrWordArray
        Dim ptr as PtrWordArray
        Dim tipoRealoc as UInt16
        Dim desvio as UInt16
        Dim soma as UInt16
        #realoc = CodeSegment()
        #ptr = CodeSegment()
        @realoc = RealocTable()
        while realoc <> 0
            tipoRealoc = realoc
            @realoc ++
            @realoc ++
            @ptr = realoc
            @realoc ++
            @realoc ++
            desvio = realoc
            @realoc ++
            @realoc ++
            soma = realoc
            @realoc ++
            @realoc ++
            if tipoRealoc == 3 then
                ptr = CodeSegment() + soma
                desvio = desvio + @ptr
                @ptr ++
                @ptr ++
                ptr = desvio
            end
            if tipoRealoc == 2 then
                @ptr = @ptr + desvio
                ptr = StackSegment() + soma
            end
            if tipoRealoc == 1 then
                @ptr = @ptr + desvio
                ptr = CodeSegment() + soma
            end
        end
        ' Define ponteiro
        asm "mov ax, cs"
        asm "mov [bp-2], ax"
        asm "mov word [bp-4], 0x80"
        ' Adiciona um zero ao final da variavel para ser ASCIZ
        asm "mov al, [0x80]"
        asm "xor ah, ah"
        asm "mov si, ax"
        asm "add si, 0x80"
        asm "mov byte [si+1], 0"
        ' Chama o Main
        Program.Main args
        ' Encerra programa quando retornar do main
        asm ".infinity:"
        asm "hlt"
        asm "jmp .infinity"
    end

    public function CodeSegment() as uint16
        asm "mov ax, cs"
    end

    public function StackSegment() as uint16
        asm "mov ax, ss"
    end

    public function ConsoleReadChar() as uint8
        asm "mov ah, 1"
        asm "int 0x21"
        asm "xor ah, ah"
    end

    public sub ConsoleWriteChar(c as uint8)
        asm "mov dl, [bp+6]"
        asm "mov ah, 2"
        asm "int 0x21"
    end
end
